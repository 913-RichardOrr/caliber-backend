AWSTemplateFormatVersion: ''
Description:
Resources:
  # Lambda function
  categoriesLambdaFunction:
    Type: AWS::Lambda::Function
      Properties: 
        Code: 
          ImageUri: String
        Description: lambda function for GETting POSTing and PUTing categories
        FunctionName: !Ref categoriesLambda
        Handler: categoriesLambda.handler
        PackageType: Image
        Role: arn:aws:iam::855430746673:role/caliber-mobile-cf
        Runtime: nodejs14.x
        VpcConfig:
          # TO-DO:
          SecurityGroupIds:
            - String
          SubnetIds:
            - String
  # API Gateway
  apiGateway:
      Type: AWS::ApiGateway::RestApi
        Properties:
            Description: Endpoint for the categories management feature
            EndpointConfiguration:
              Types:
                - REGIONAL
          Name: categories-api-cf
  # API Gateway Resource
  categoriesResource:
    Type: AWS::ApiGateway::Resource
      Properties:
          RestApiId: !Ref apiGateway
          ParentId: !GetAtt apiGateway.RootResourceId
          PathPart: categories
  # API Gateway Resource
  categoryIdResource:
    Type: AWS::ApiGateway::Resource
      Properties:
          RestApiId: !Ref apiGateway
          ParentId: !GetAtt categoriesResource??
          PathPart: categoryId?????
  # API Gateway Resource Method (GET)
  getCategoriesMethod:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - categoriesLambda
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn: !GetAtt categoriesLambda.Arn
      ResourceId: !Ref categoriesResource
      RestApiId: !Ref apiGateway
  # API Gateway Resource Method (POST)
  addCategoryMethod:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - categoriesLambda
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn: !GetAtt categoriesLambda.Arn
      ResourceId: !Ref categoriesResource
      RestApiId: !Ref apiGateway
  # API Gateway Resource Method (PUT)
  updateCategoryMethod:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - categoriesLambda
    Properties:
      AuthorizationType: NONE
      HttpMethod: PUT
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn: !GetAtt categoriesLambda.Arn
      ResourceId: !Ref categoryIdResource
      RestApiId: !Ref apiGateway
  # CORS
  OptionsMethod:
  # API Gateway Deployment
  apiGatewayDefaultDeployment:
  # Give API Gateway permission to invoke Lambda
  apiGatewayInvokeTHISLAMBDA:
    Type: AWS::Lambda::Permission
  # Give api gateway some IAM roles for lamda
  lambdaIAMRole:
  # Create our log group
  lambdaLogGroup:
Outputs:
  LAMBDAFUNCTIONArn:
  apiGatewayInvokeUrl: